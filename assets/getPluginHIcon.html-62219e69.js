import{_ as a,W as e,X as n,a0 as s}from"./framework-c8ebc670.js";const i={},r=s(`<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><div class="language-ahk line-numbers-mode" data-ext="ahk"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">static</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">PluginHelper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPluginHIcon</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">pluginName</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="类型" tabindex="-1"><a class="header-anchor" href="#类型" aria-hidden="true">#</a> 类型</h2><p>静态方法</p><h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h2><p>获取指定插件的图标 <code>hIcon</code></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>使用 <code>hIcon</code> 时请加 <code>*</code> 以使用副本，如 <code>hIcon:* 123456</code>，避免原图标句柄用后销毁</p></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ul><li><h3 id="pluginname-string" tabindex="-1"><a class="header-anchor" href="#pluginname-string" aria-hidden="true">#</a> pluginName {String}</h3></li></ul><p>插件名称，即插件文件名、插件id</p><h2 id="返回值-int" tabindex="-1"><a class="header-anchor" href="#返回值-int" aria-hidden="true">#</a> 返回值 {Int}</h2><p>如果插件有图标，则返回hIcon，否则返回0</p>`,12),c=[r];function d(o,t){return e(),n("div",null,c)}const h=a(i,[["render",d],["__file","getPluginHIcon.html.vue"]]);export{h as default};
