import{_ as t,W as i,X as c,Y as s,Z as n,$ as a,a1 as d,a0 as e,C as o}from"./framework-c8ebc670.js";const p={},h=e(`<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><div class="language-ahk line-numbers-mode" data-ext="ahk"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">static</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">addPluginToIntelligentMode</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">matchHandler</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">runHandler</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">contextHandler</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">hIcon</span><span style="color:#C678DD;">?</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="类型" tabindex="-1"><a class="header-anchor" href="#类型" aria-hidden="true">#</a> 类型</h2><p>静态方法</p><h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h2>`,5),u=s("strong",null,"插件智能项",-1),B=e('<h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ul><li><h3 id="name-string" tabindex="-1"><a class="header-anchor" href="#name-string" aria-hidden="true">#</a> name {String}</h3></li></ul><p>插件id，即插件文件名</p><ul><li><h3 id="title-string" tabindex="-1"><a class="header-anchor" href="#title-string" aria-hidden="true">#</a> title {String}</h3></li></ul><p>插件智能项显示标题</p>',5),y={id:"matchhandler-closure",tabindex:"-1"},v=s("a",{class:"header-anchor",href:"#matchhandler-closure","aria-hidden":"true"},"#",-1),_={href:"https://orz707.gitee.io/v2/docs/Functions.htm#closures",target:"_blank",rel:"noopener noreferrer"},b=e(`<div class="language-ahk line-numbers-mode" data-ext="ahk"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">searchText</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">pastedContentType</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">pastedContent</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">workWinInfo</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">winInfoMatchFlag</span></span>
<span class="line"><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Number</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>接收参数 <ul><li><code>obj</code>：指向添加的插件智能项对象。</li><li><code>searchText</code>：当前搜索内容。</li><li><code>pastedContentType</code>：粘贴内容类型。</li><li><code>pastedContent</code>：粘贴内容。</li><li><code>workWinInfo</code>：工作窗口信息对象</li><li><code>winInfoMatchFlag</code>：是否开启工作窗口模式</li></ul></li><li>返回值 <ul><li>1：显示该插件智能项</li><li>0：不显示该插件智能项</li></ul></li></ul><p>智能插件项的自定义匹配函数，返回值决定当前插件项是否显示</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>工作窗口模式是按下<strong>智能搜索</strong>快捷键时，若当前<strong>没有选中任何内容</strong>，则<strong>Starter</strong>将获取工作窗口信息，进入工作窗口模式下的智能模式搜索框。</p><p>搜索框会短暂显示工作窗口的信息，插件可以根据此时的工作窗口信息进行匹配</p></div>`,4),m={id:"runhandler-closure",tabindex:"-1"},g=s("a",{class:"header-anchor",href:"#runhandler-closure","aria-hidden":"true"},"#",-1),F={href:"https://orz707.gitee.io/v2/docs/Functions.htm#closures",target:"_blank",rel:"noopener noreferrer"},C=e(`<div class="language-ahk line-numbers-mode" data-ext="ahk"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">searchText</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Any</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>接收参数 <ul><li><code>obj</code>：指向添加的插件智能项对象。</li><li><code>searchText</code>：当前搜索内容。</li></ul></li></ul><p>运行（鼠标双击或回车）该插件智能项时执行的函数。</p>`,3),x={id:"contexthandler-closure-可选",tabindex:"-1"},A=s("a",{class:"header-anchor",href:"#contexthandler-closure-可选","aria-hidden":"true"},"#",-1),k={href:"https://orz707.gitee.io/v2/docs/Functions.htm#closures",target:"_blank",rel:"noopener noreferrer"},f=e(`<div class="language-ahk line-numbers-mode" data-ext="ahk"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Any</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>接收参数 <ul><li><code>obj</code>：指向添加的插件智能项对象。</li></ul></li></ul><p>选填，右键该插件智能项时执行的函数。</p><ul><li><h3 id="hicon-int-可选" tabindex="-1"><a class="header-anchor" href="#hicon-int-可选" aria-hidden="true">#</a> hIcon {Int} （可选）</h3></li></ul><p>选填，插件智能项显示的图标hIcon，忽略则使用插件的图标。</p>`,5);function E(I,D){const r=o("RouterLink"),l=o("ExternalLinkIcon");return i(),c("div",null,[h,s("p",null,[n("添加"),u,n("，应用方式见"),a(r,{to:"/dev/intelligent/"},{default:d(()=>[n("插件智能项")]),_:1})]),B,s("ul",null,[s("li",null,[s("h3",y,[v,n(" matchHandler {"),s("a",_,[n("Closure"),a(l)]),n("}")])])]),b,s("ul",null,[s("li",null,[s("h3",m,[g,n(" runHandler {"),s("a",F,[n("Closure"),a(l)]),n("}")])])]),C,s("ul",null,[s("li",null,[s("h3",x,[A,n(" contextHandler {"),s("a",k,[n("Closure"),a(l)]),n("} （可选）")])])]),f])}const j=t(p,[["render",E],["__file","addPluginToIntelligentMode.html.vue"]]);export{j as default};
