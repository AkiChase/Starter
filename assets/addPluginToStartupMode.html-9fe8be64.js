import{_ as t,W as i,X as c,Y as s,Z as e,$ as n,a1 as d,a0 as a,C as o}from"./framework-c8ebc670.js";const p={},h=a(`<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><div class="language-ahk line-numbers-mode" data-ext="ahk"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">static</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">addPluginToStartupMode</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">keywords</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">startHandler</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">doubleRightHandler</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">contextHandler</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">hIcon</span><span style="color:#C678DD;">?</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="类型" tabindex="-1"><a class="header-anchor" href="#类型" aria-hidden="true">#</a> 类型</h2><p>静态方法</p><h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h2>`,5),u=s("strong",null,"插件启动项",-1),B=a('<h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ul><li><h3 id="name-string" tabindex="-1"><a class="header-anchor" href="#name-string" aria-hidden="true">#</a> name {String}</h3></li></ul><p>插件id，即插件文件名</p><ul><li><h3 id="title-string" tabindex="-1"><a class="header-anchor" href="#title-string" aria-hidden="true">#</a> title {String}</h3></li></ul><p>插件启动项显示标题</p><ul><li><h3 id="keywords-array" tabindex="-1"><a class="header-anchor" href="#keywords-array" aria-hidden="true">#</a> keywords {Array}</h3></li></ul><p>插件启动项其他关键字，比如 <code>[&quot;其他&quot;,&quot;QTGJZ&quot;]</code></p>',7),y={id:"starthandler-closure",tabindex:"-1"},b=s("a",{class:"header-anchor",href:"#starthandler-closure","aria-hidden":"true"},"#",-1),_={href:"https://orz707.gitee.io/v2/docs/Functions.htm#closures",target:"_blank",rel:"noopener noreferrer"},v=a(`<div class="language-ahk line-numbers-mode" data-ext="ahk"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">searchText</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Any</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>接收参数 <ul><li><code>obj</code>：指向添加的插件启动项对象。</li><li><code>searchText</code>：当前搜索内容。</li></ul></li></ul><p>运行（鼠标双击或回车）该插件启动项时执行的函数。</p>`,3),m={id:"doublerighthandler-closure-可选",tabindex:"-1"},g=s("a",{class:"header-anchor",href:"#doublerighthandler-closure-可选","aria-hidden":"true"},"#",-1),x={href:"https://orz707.gitee.io/v2/docs/Functions.htm#closures",target:"_blank",rel:"noopener noreferrer"},k=a(`<div class="language-ahk line-numbers-mode" data-ext="ahk"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">searchText</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Any</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>接收参数 <ul><li><code>obj</code>：指向添加的插件启动项对象。</li><li><code>searchText</code>：当前搜索内容。</li></ul></li></ul><p>选填，选中该插件启动项后，双击 <code>Right</code> 按键时执行的函数。</p>`,3),A={id:"contexthandler-closure-可选",tabindex:"-1"},F=s("a",{class:"header-anchor",href:"#contexthandler-closure-可选","aria-hidden":"true"},"#",-1),C={href:"https://orz707.gitee.io/v2/docs/Functions.htm#closures",target:"_blank",rel:"noopener noreferrer"},f=a(`<div class="language-ahk line-numbers-mode" data-ext="ahk"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Any</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>接收参数 <ul><li><code>obj</code>：指向添加的插件启动项对象。</li></ul></li></ul><p>选填，右键该插件启动项时的处理函数。</p><ul><li><h3 id="hicon-int-可选" tabindex="-1"><a class="header-anchor" href="#hicon-int-可选" aria-hidden="true">#</a> hIcon {Int} （可选）</h3></li></ul><p>插件启动项显示的图标hIcon，忽略则使用插件的图标。</p>`,5);function E(D,T){const r=o("RouterLink"),l=o("ExternalLinkIcon");return i(),c("div",null,[h,s("p",null,[e("添加"),u,e("，应用方式见"),n(r,{to:"/dev/startup/"},{default:d(()=>[e("插件启动项")]),_:1})]),B,s("ul",null,[s("li",null,[s("h3",y,[b,e(" startHandler {"),s("a",_,[e("Closure"),n(l)]),e("}")])])]),v,s("ul",null,[s("li",null,[s("h3",m,[g,e(" doubleRightHandler {"),s("a",x,[e("Closure"),n(l)]),e("} （可选）")])])]),k,s("ul",null,[s("li",null,[s("h3",A,[F,e(" contextHandler {"),s("a",C,[e("Closure"),n(l)]),e("} （可选）")])])]),f])}const H=t(p,[["render",E],["__file","addPluginToStartupMode.html.vue"]]);export{H as default};
